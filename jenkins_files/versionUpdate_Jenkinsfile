pipeline {
  agent {
    node {
      label 'stratus_slave'
    }
  }
  // The options directive is for configuration that applies to the whole job.
  options {
    buildDiscarder(logRotator(numToKeepStr:'20'))
    timeout(time: 20, unit: 'MINUTES')
    timestamps()
  }
  tools {
    jdk 'JDK1.8.0_77'
    maven 'Maven 3.0.5'
  }
  stages {
    stage('Update Image & POM Version') {
      steps {
        script {
          sh 'docker run --rm -v $PWD:/app -w /app armdocker.seli.gic.ericsson.se/dockerhub-ericsson-remote/treeder/bump:1.2.8 $UPDATE_TYPE'
          env.IMAGE_VERSION = readFile('VERSION').trim()
          currentBuild.displayName = "#${env.BUILD_NUMBER} - Update Type: ${UPDATE_TYPE} - Updating OQS Smoketest Version to ${env.IMAGE_VERSION}"
        }
      }
    }
  }
  // The post build actions
  post {
    success {
      echo "Pipeline Successfully Completed - Commit Version $IMAGE_VERSION"
      sh '''
      git config user.name ENM_Jenkins
      git config user.email enmadm100@lmera.ericsson.se
      git add VERSION
      git commit -m "Version $IMAGE_VERSION"
      git rebase HEAD gcn/master
      git push gcn HEAD:master
      '''
    }
    failure {
      emailext(attachLog: true,
               attachmentsPattern: 'currentBuild.rawBuild.log',
               from: 'enmadm100@lmera.ericsson.se',
               to: "${env.BUILD_USER_EMAIL}",
               subject: "Failed: Jenkins Job ${env.JOB_NAME}",
               body: "Job: ${env.JOB_NAME}\nBuild Number: ${env.BUILD_NUMBER}\nThe Job build URL: ${env.BUILD_URL}")
    }
  }
}
